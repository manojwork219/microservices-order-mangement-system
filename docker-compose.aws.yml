version: "3.8"

services:

  mysql:
    image: mysql:8
    container_name: mysql
    ports:
      - "3307:3306"
    environment:
      MYSQL_ROOT_PASSWORD: root
    volumes:
      - mysql_data:/var/lib/mysql
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-uroot", "-proot"]
      interval: 5s
      timeout: 3s
      retries: 5
    networks:
      - microservices-net

  zookeeper:
    image: bitnami/zookeeper:3.8.1
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ALLOW_ANONYMOUS_LOGIN: yes
    networks:
      - microservices-net

  kafka:
    image: bitnami/kafka:3.4.0
    container_name: kafka
    ports:
      - "9092:9092"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_CFG_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT
      KAFKA_CFG_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092
      KAFKA_CFG_LISTENERS: PLAINTEXT://0.0.0.0:9092
      KAFKA_CFG_AUTO_CREATE_TOPICS_ENABLE: "true"
      ALLOW_PLAINTEXT_LISTENER: yes
      KAFKA_ENABLE_KRAFT: "no"
    depends_on:
      - zookeeper
    networks:
      - microservices-net

  inventory-service:
    image: manojwork219/inventory-service:latest
    build:
      context: ./inventory-service
    container_name: inventory-service
    ports:
      - "8082:8082"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: aws
    networks:
      - microservices-net

  order-service:
    image: manojwork219/order-service:latest
    build:
      context: ./order-service
    container_name: order-service
    ports:
      - "8081:8081"
    depends_on:
      mysql:
        condition: service_healthy
      kafka:
        condition: service_started
      inventory-service:
        condition: service_started
    environment:
      SPRING_PROFILES_ACTIVE: aws
    networks:
      - microservices-net

volumes:
  mysql_data:

networks:
  microservices-net:
    driver: bridge
