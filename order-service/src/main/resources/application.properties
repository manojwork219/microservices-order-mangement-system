#Working app config for Docker Containerization on AWS
#saving the whole application src code to github to a different branch

spring.application.name=order-service
server.port=8081

spring.autoconfigure.exclude=org.springframework.boot.actuate.autoconfigure.metrics.SystemMetricsAutoConfiguration

# Inventory Service (Docker container name: inventory-service)
inventory.service.url=http://inventory-service:8082/api/inventory

# Database
spring.datasource.url=jdbc:mysql://mysql:3306/order_db
spring.datasource.username=root
spring.datasource.password=root
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver

# JPA
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQLDialect

# Kafka
spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=order-group
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.apache.kafka.common.serialization.StringSerializer

# Kafka Topics
order.topic.name=order-topic
order.confirmation.topic.name=order-confirmation-topic

management.defaults.metrics.enabled=false
management.metrics.binders.system.enabled=false


# Disable Micrometer metrics (fix for EC2 Docker Cgroup crash)
# management.metrics.binders.enabled=false

